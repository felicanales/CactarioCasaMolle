#!/bin/bash

# Script para verificar la configuraci√≥n del backend para Railway
echo "üîç Verificando configuraci√≥n del backend para Railway..."

# Verificar que estamos en el directorio correcto
if [ ! -d "fastapi" ]; then
    echo "‚ùå Directorio 'fastapi' no encontrado"
    echo "   Aseg√∫rate de ejecutar este script desde la ra√≠z del proyecto"
    exit 1
fi

echo "‚úÖ Directorio 'fastapi' encontrado"

# Verificar archivos de configuraci√≥n
echo "üìã Verificando archivos de configuraci√≥n..."

# Verificar railway.json
if [ -f "fastapi/railway.json" ]; then
    echo "‚úÖ railway.json encontrado"
else
    echo "‚ùå railway.json no encontrado"
fi

# Verificar nixpacks.toml
if [ -f "fastapi/nixpacks.toml" ]; then
    echo "‚úÖ nixpacks.toml encontrado"
    # Verificar sintaxis b√°sica
    if grep -q 'providers = \["python"\]' fastapi/nixpacks.toml; then
        echo "‚úÖ Sintaxis de providers correcta"
    else
        echo "‚ùå Sintaxis de providers incorrecta"
    fi
    # Verificar uso de python -m pip
    if grep -q 'python -m pip' fastapi/nixpacks.toml; then
        echo "‚úÖ Usa 'python -m pip' (recomendado)"
    elif grep -q 'pip install' fastapi/nixpacks.toml; then
        echo "‚ö†Ô∏è  Usa 'pip install' (puede fallar en Railway)"
    fi
else
    echo "‚ùå nixpacks.toml no encontrado"
    echo "   Railway usar√° detecci√≥n autom√°tica de Python"
fi

# Verificar archivos alternativos
if [ -f "fastapi/nixpacks-robust.toml" ]; then
    echo "‚úÖ nixpacks-robust.toml disponible como alternativa"
fi
if [ -f "fastapi/nixpacks-minimal.toml" ]; then
    echo "‚úÖ nixpacks-minimal.toml disponible como alternativa"
fi

# Verificar Procfile
if [ -f "fastapi/Procfile" ]; then
    echo "‚úÖ Procfile encontrado"
    if grep -q "uvicorn app.main:app" fastapi/Procfile; then
        echo "‚úÖ Comando de inicio correcto"
    else
        echo "‚ùå Comando de inicio incorrecto"
    fi
else
    echo "‚ùå Procfile no encontrado"
fi

# Verificar runtime.txt
if [ -f "fastapi/runtime.txt" ]; then
    echo "‚úÖ runtime.txt encontrado"
    if grep -q "python-3.11" fastapi/runtime.txt; then
        echo "‚úÖ Versi√≥n de Python correcta"
    else
        echo "‚ùå Versi√≥n de Python incorrecta"
    fi
else
    echo "‚ùå runtime.txt no encontrado"
fi

# Verificar requirements.txt
if [ -f "fastapi/requirements.txt" ]; then
    echo "‚úÖ requirements.txt encontrado"
    if grep -q "fastapi" fastapi/requirements.txt; then
        echo "‚úÖ FastAPI en requirements.txt"
    else
        echo "‚ùå FastAPI no encontrado en requirements.txt"
    fi
    if grep -q "uvicorn" fastapi/requirements.txt; then
        echo "‚úÖ Uvicorn en requirements.txt"
    else
        echo "‚ùå Uvicorn no encontrado en requirements.txt"
    fi
else
    echo "‚ùå requirements.txt no encontrado"
fi

# Verificar app/main.py
if [ -f "fastapi/app/main.py" ]; then
    echo "‚úÖ app/main.py encontrado"
    if grep -q "FastAPI" fastapi/app/main.py; then
        echo "‚úÖ FastAPI importado correctamente"
    else
        echo "‚ùå FastAPI no importado"
    fi
    if grep -q "@app.get.*health" fastapi/app/main.py; then
        echo "‚úÖ Endpoint /health encontrado"
    else
        echo "‚ùå Endpoint /health no encontrado"
    fi
else
    echo "‚ùå app/main.py no encontrado"
fi

# Verificar configuraci√≥n CORS
echo "üåê Verificando configuraci√≥n CORS..."
if grep -q "cactario-frontend-production.up.railway.app" fastapi/app/main.py; then
    echo "‚úÖ Dominio del frontend configurado en CORS"
else
    echo "‚ùå Dominio del frontend no configurado en CORS"
fi

# Verificar middleware CORS
if grep -q "CORSMiddleware" fastapi/app/main.py; then
    echo "‚úÖ CORSMiddleware configurado"
else
    echo "‚ùå CORSMiddleware no configurado"
fi

echo ""
echo "üéØ Resumen de verificaci√≥n:"
echo "=========================="

# Contar archivos de configuraci√≥n
config_files=0
if [ -f "fastapi/railway.json" ]; then ((config_files++)); fi
if [ -f "fastapi/nixpacks.toml" ]; then ((config_files++)); fi
if [ -f "fastapi/Procfile" ]; then ((config_files++)); fi
if [ -f "fastapi/runtime.txt" ]; then ((config_files++)); fi

echo "Archivos de configuraci√≥n encontrados: $config_files/4"

if [ $config_files -eq 4 ]; then
    echo "‚úÖ Todos los archivos de configuraci√≥n est√°n presentes"
    echo ""
    echo "üöÄ El backend est√° listo para desplegar en Railway!"
    echo ""
    echo "üìã Pr√≥ximos pasos:"
    echo "1. Ve a Railway Dashboard"
    echo "2. Crea un nuevo servicio"
    echo "3. Configura working directory como 'fastapi'"
    echo "4. Configura variables de entorno"
    echo "5. Genera dominio p√∫blico"
    echo ""
    echo "üìñ Consulta RAILWAY_BACKEND_DEPLOYMENT_GUIDE.md para instrucciones detalladas"
else
    echo "‚ùå Faltan archivos de configuraci√≥n"
    echo "   Revisa los errores anteriores"
fi

echo ""
echo "üîß Variables de entorno requeridas:"
echo "SUPABASE_URL=https://gefozbrdrtopdfuezppm.supabase.co"
echo "SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
echo "SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
echo "ENV=production"
echo "CORS_ORIGINS=https://cactario-frontend-production.up.railway.app"
